/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ----------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |   3   |  4  |  5  |                  |  6  |  7  |   8   |  9  |  0  |  DEL  |
            // |  TAB  |  Q  |  W  |   E   |  R  |  T  |                  |  Y  |  U  |   I   |  O  |  P  |   \   |
            // |  CTRL |  A  |  S  |   D   |  F  |  G  |                  |  H  |  J  |   K   |  L  |  ;  |   '   |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  |  ESC  |  |  BSPC |  N  |  M  |   ,   |  .  |  /  | SHIFT |
            //                     | LOWER | ALT | GUI | ENTER |  | SPACE | GUI | ALT | RAISE |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4    &kp N5                             &kp N6    &kp N7    &kp N8     &kp N9   &kp N0    &kp DEL
&kp TAB    &kp Q   &kp W   &kp E   &kp R     &kp T                              &kp Y     &kp U     &kp I      &kp O    &kp P     &kp BACKSLASH
&kp LCTRL  &kp A   &kp S   &kp D   &kp F     &kp G                              &kp H     &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V     &kp B     &kp ESCAPE    &kp BSPC   &kp N     &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &mo 1   &kp LALT  &kp LGUI  &kp ENTER     &kp SPACE  &kp RGUI  &kp RALT  &mo 2
            >;
        };

        // ----------------------------------------------------------------------------------------------
        // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |                |     |     |       |     |  -  |  =  |
        // |       | BD1 | BD2 | BD3 | BD4 | BD5 |                |     |     |       |     |  [  |  ]  |
        // |       |     |     |     |     |     |                |     |     |       |     |     |     |
        // |       |     |     |     |     |     |       |  | DEL |     |     |       |     |     |     |
        //                     |     |     |     | SPACE |  |     |     |     | SUPER |

        lower_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                         &trans  &trans  &trans  &trans  &kp MINUS  &kp EQUAL
&trans      &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                        &trans  &trans  &trans  &trans  &kp LBKT   &kp RBKT
&trans      &trans         &trans         &trans         &trans         &trans                               &trans  &trans  &trans  &trans  &trans     &trans
&trans      &trans         &trans         &trans         &trans         &trans         &trans       &kp DEL  &trans  &trans  &trans  &trans  &trans     &trans
                                          &trans         &trans         &trans         &kp SPACE    &trans   &trans  &trans  &mo 3
            >;
        };

        // ------------------------------------------------------------------------------------------
        // |     |       |       |       |     |     |              |     |     |     | BRTDN | BRTUP | VUP |
        // |     |       |       |       |     |     |              |     |     |     |       |       | VDN |
        // |     |       |       |       |     |     |              | LFT | DWN |  UP |  RGT  |       | MUT |
        // |     |       |       |       |     |     |     |  |     |     |     | PRV |  PLAY |  NXT  |     |
        //                       | SUPER |     |     |     |  |     |     |     |     |

        raise_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans      &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_UP
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans      &trans        &trans        &kp C_VOLUME_DOWN
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LEFT  &kp DOWN  &kp UP      &kp RIGHT     &trans        &kp C_MUTE
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &kp C_PREV  &kp C_PP      &kp C_NEXT    &trans
                        &mo 3   &trans  &trans  &trans    &trans  &trans    &trans    &trans
            >;
        };

        // ------------------------------------------------------------------------------------------
        // | F12 |  F1 |  F2 |  F3 |  F4 |  F5 |              |   F6  |   F7  |  F8  |    F9  | F10 | F11 |
        // |     |     |     |     |     |     |              |       |       |      |        |     |     |
        // |     |     |     |     |     |     |              | W_LFT | W_DWN | W_UP |  W_RGT |     |     |
        // |     |     |     |     |     |     |     |  |     |       | W_MAX |      |        |     |     |
        //                   |     |     |     |     |  |     |       |       |      |

        super_layer {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6                &kp F7                &kp F8              &kp F9                 &kp F10  &kp F11
&trans   &trans  &trans  &trans  &trans  &trans                    &trans                &trans                &trans              &trans                 &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans                    &kp LC(LA(LG(LEFT)))  &kp LA(LC(LG(DOWN)))  &kp LA(LC(LG(UP)))  &kp LA(LC(LG(RIGHT)))  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                &kp LA(LC(LG(M)))     &trans              &trans                 &trans   &trans
                         &trans  &trans  &trans  &trans    &trans  &trans                &trans                &trans
            >;
        };
    };
};
